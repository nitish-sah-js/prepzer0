<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #1D4ED8;
            --dark-color: #1f2a40;
            --light-color: #f0f6ff;
            --border-radius: 8px;
            --error-color: #dc3545;
            --success-color: #198754;
        }
        
        body {
            background-color: #141D2F;
            font-family: 'Arial', sans-serif;
            color: var(--dark-color);
            min-height: 100vh;
            overflow-x: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        /* Error Toast Styles */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }
        
        .error-toast {
            background: linear-gradient(135deg, #dc3545, #b02a37);
            border: none;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(220, 53, 69, 0.3);
            backdrop-filter: blur(10px);
            color: white;
            min-width: 350px;
            animation: slideInRight 0.4s ease-out;
        }
        
        .error-toast .toast-header {
            background: rgba(255, 255, 255, 0.1);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            border-radius: 12px 12px 0 0;
        }
        
        .error-toast .toast-body {
            font-weight: 500;
            padding: 15px 20px;
        }
        
        .error-toast .btn-close {
            filter: invert(1);
            opacity: 0.8;
        }
        
        .error-toast .btn-close:hover {
            opacity: 1;
        }
        
        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        
        .shake-animation {
            animation: shake 0.5s ease-in-out;
        }
        
        /* Test paper layout */
        .login-wrapper {
            position: relative;
            width: 100%;
            max-width: 900px;
            display: flex;
            margin: 2rem;
        }
        
        .illustration-panel {
            flex: 1;
            padding: 30px;
            display: none;
        }
        
        @media (min-width: 992px) {
            .illustration-panel {
                display: flex;
                flex-direction: column;
                justify-content: center;
            }
        }
        
        .login-container {
            flex: 1;
            background-color: #ffffff;
            border-radius: var(--border-radius);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            padding: 40px;
            position: relative;
            z-index: 1;
            background-image: linear-gradient(to bottom, rgba(63, 142, 252, 0.03) 1px, transparent 1px);
            background-size: 100% 28px;
            border: 3px solid #1D4ED8;
        }
        
        /* Paper clip effect */
        .login-container::before {
            content: "";
            position: absolute;
            top: -10px;
            right: 30px;
            width: 40px;
            height: 60px;
            background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="40" height="60"%3E%3Cpath d="M18.5 14.5V5.5C18.5 3.29 16.71 1.5 14.5 1.5H9.5C7.29 1.5 5.5 3.29 5.5 5.5V15.5C5.5 17.71 7.29 19.5 9.5 19.5H15.5" stroke="%231D4ED8" stroke-width="1.5" fill="none"%3E%3C/path%3E%3C/svg%3E');
            transform: rotate(10deg);
            opacity: 0.7;
            z-index: 2;
        }
        
        /* Grade watermark */
        .login-container::after {
            content: "A+";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-30deg);
            font-size: 120px;
            font-weight: 900;
            color: rgba(63, 142, 252, 0.05);
            z-index: -1;
        }
        
        .login-header {
            margin-bottom: 30px;
            position: relative;
        }
        
        .login-logo {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .login-logo svg {
            height: 40px;
        }
        
        .hole-punch {
            position: absolute;
            left: -40px;
            top: 50%;
            transform: translateY(-50%);
            display: flex;
            flex-direction: column;
        }
        
        .hole {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: var(--light-color);
            margin: 30px 0;
            box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
        }
        
        h2 {
            text-align: center;
            font-weight: 700;
            color: var(--dark-color);
            padding-bottom: 15px;
            position: relative;
        }
        
        h2::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }
        
        .form-group {
            margin-bottom: 25px;
            position: relative;
        }
        
        .question-number {
            position: absolute;
            left: -30px;
            top: 10px;
            font-weight: bold;
            color: var(--primary-color);
            font-size: 14px;
        }
        
        .form-label {
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
        }
        
        .form-label i {
            color: var(--primary-color);
            margin-right: 8px;
        }
        
        .form-control {
            padding: 12px 15px;
            border: 1px solid #e1e1e1;
            border-radius: var(--border-radius);
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(63, 142, 252, 0.15);
        }
        
        .form-control.error {
            border-color: var(--error-color);
            box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.15);
        }
        
        /* Password toggle button */
        .password-field {
            position: relative;
        }
        
        .password-toggle {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            border: none;
            background: transparent;
            cursor: pointer;
            color: var(--primary-color);
            padding: 0;
            transition: all 0.3s ease;
        }
        
        .password-toggle:hover {
            color: var(--dark-color);
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            border-radius: var(--border-radius);
            padding: 12px 20px;
            font-weight: 600;
            width: 100%;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .btn-primary:hover {
            background-color: #2e78e6;
            border-color: #2e78e6;
            box-shadow: 0 0 0 0.25rem rgba(63, 142, 252, 0.25);
        }
        
        .btn-primary:focus {
            box-shadow: 0 0 0 0.25rem rgba(63, 142, 252, 0.25);
        }
        
        .btn-primary:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }
        
        .btn-primary.loading {
            color: transparent;
        }
        
        .btn-primary.loading::after {
            content: "";
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin-left: -10px;
            margin-top: -10px;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: button-loading-spinner 1s ease infinite;
        }
        
        @keyframes button-loading-spinner {
            from { transform: rotate(0turn); }
            to { transform: rotate(1turn); }
        }
        
        .text-center {
            margin-top: 25px;
        }
        
        .text-center a {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
        }
        
        .text-center a i {
            margin-right: 5px;
            font-size: 0.8rem;
        }
        
        .text-center a:hover {
            text-decoration: underline;
        }
        
        .floating-elements {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            overflow: hidden;
            z-index: -1;
        }
        
        .floating-element {
            position: absolute;
            opacity: 0.1;
            animation-name: float;
            animation-timing-function: ease-in-out;
            animation-iteration-count: infinite;
        }
        
        .element-1 {
            top: 10%;
            left: 10%;
            animation-duration: 15s;
        }
        
        .element-2 {
            top: 20%;
            right: 15%;
            animation-duration: 18s;
        }
        
        .element-3 {
            bottom: 15%;
            left: 20%;
            animation-duration: 14s;
        }
        
        .element-4 {
            bottom: 10%;
            right: 10%;
            animation-duration: 16s;
        }
        
        @keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
            }
            50% {
                transform: translateY(-20px) rotate(5deg);
            }
            100% {
                transform: translateY(0) rotate(0deg);
            }
        }
        
        /* Navbar styling */
        .navbar {
            background-color: var(--dark-color) !important;
        }
        
        .navbar-brand {
            color: #fff !important;
            font-weight: bold;
        }
        
        .nav-link {
            color: rgba(255,255,255,0.8) !important;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover, .nav-link.active {
            color: #fff !important;
        }
        
        .dropdown-menu {
            border-radius: var(--border-radius);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .dropdown-item {
            transition: all 0.3s ease;
        }
        
        .dropdown-item:hover {
            background-color: rgba(63, 142, 252, 0.1);
        }
    </style>
</head>
<body>
    <!-- Error Toast Container -->
    <div class="toast-container">
        <div id="errorToast" class="toast error-toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="fa-solid fa-triangle-exclamation text-white me-2"></i>
                <strong class="me-auto">Login Failed</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="errorMessage">
                <!-- Error message will be inserted here -->
            </div>
        </div>
    </div>

    <% if (!locals.isStudentPage) { %>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="https://salty-lowlands-81889.herokuapp.com/images/eat.png" width="30" height="30" class="d-inline-block align-top" alt="">
                Earthling Aid Tech
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/dashboard">Dashboard</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle active" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Sign_In
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                            <li><a class="dropdown-item active" href="#">Login</a></li>
                            <li><a class="dropdown-item" href="/authenticate/signup">Register</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <% } %>

    <div class="floating-elements">
        <svg class="floating-element element-1" width="100" height="100" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="#3f8efc" d="M21,5c-1.11-0.35-2.33-0.5-3.5-0.5c-1.95,0-4.05,0.4-5.5,1.5c-1.45-1.1-3.55-1.5-5.5-1.5S2.45,4.9,1,6v14.65 c0,0.25,0.25,0.5,0.5,0.5c0.1,0,0.15-0.05,0.25-0.05C3.1,20.45,5.05,20,6.5,20c1.95,0,4.05,0.4,5.5,1.5c1.35-0.85,3.8-1.5,5.5-1.5 c1.65,0,3.35,0.3,4.75,1.05c0.1,0.05,0.15,0.05,0.25,0.05c0.25,0,0.5-0.25,0.5-0.5V6C22.4,5.55,21.75,5.25,21,5z M21,18.5 c-1.1-0.35-2.3-0.5-3.5-0.5c-1.7,0-4.15,0.65-5.5,1.5V8c1.35-0.85,3.8-1.5,5.5-1.5c1.2,0,2.4,0.15,3.5,0.5V18.5z"/>
        </svg>
        <svg class="floating-element element-2" width="90" height="90" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="#3f8efc" d="M18,2H6C4.9,2,4,2.9,4,4v16c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2V4C20,2.9,19.1,2,18,2z M9,4h2v5l-1-0.75L9,9V4z M18,20H6V4h1v9l3-2.25L13,13V4h5V20z"/>
        </svg>
        <svg class="floating-element element-3" width="80" height="80" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="#3f8efc" d="M12,3L1,9l4,2.18v6L12,21l7-3.82v-6l2-1.09V17h2V9L12,3z M18.82,9L12,12.72L5.18,9L12,5.28L18.82,9z M17,15.99l-5,2.73l-5-2.73v-3.72L12,15l5-2.73V15.99z"/>
        </svg>
        <svg class="floating-element element-4" width="85" height="85" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="#3f8efc" d="M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M19,19H5V5h14V19z"/>
            <path fill="#3f8efc" d="M7,12h2v5h-2V12z M15,7h2v10h-2V7z M11,14h2v3h-2V14z M11,10h2v2h-2V10z"/>
        </svg>
    </div>

    <div class="login-wrapper">
        <div class="illustration-panel">
            <svg width="100%" height="auto" viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg">
                <!-- Study scene illustration -->
                <style>
                    .st0{fill:#F0F6FF;}
                    .st1{fill:#E0E0E0;}
                    .st2{fill:#1D4ED8;}
                    .st3{fill:#2E78E6;}
                    .st4{fill:#FFFFFF;}
                    .st5{fill:#1f2a40;}
                </style>
                <!-- Desk -->
                <rect x="100" y="300" width="300" height="30" class="st1"/>
                <rect x="120" y="330" width="20" height="100" class="st1"/>
                <rect x="360" y="330" width="20" height="100" class="st1"/>
                
                <!-- Books -->
                <rect x="150" y="210" width="80" height="90" rx="2" class="st2"/>
                <rect x="155" y="215" width="70" height="80" rx="2" class="st4"/>
                <rect x="160" y="240" width="60" height="5" class="st1"/>
                <rect x="160" y="250" width="60" height="5" class="st1"/>
                <rect x="160" y="260" width="40" height="5" class="st1"/>
                
                <rect x="170" y="190" width="90" height="20" rx="2" class="st3"/>
                <rect x="170" y="150" width="90" height="40" rx="2" class="st2"/>
                <rect x="175" y="155" width="80" height="30" rx="2" class="st4"/>
                <rect x="180" y="165" width="70" height="3" class="st1"/>
                <rect x="180" y="175" width="50" height="3" class="st1"/>
                
                <!-- Computer -->
                <rect x="270" y="220" width="80" height="60" rx="3" class="st5"/>
                <rect x="275" y="225" width="70" height="45" rx="2" class="st4"/>
                <rect x="280" y="280" width="60" height="10" rx="2" class="st5"/>
                <rect x="305" y="290" width="10" height="10" class="st5"/>
                
                <!-- Coffee cup -->
                <circle cx="370" cy="250" r="15" class="st2"/>
                <rect x="365" y="235" width="10" height="5" rx="2" class="st3"/>
                <path d="M355,250 Q355,270 370,270 Q385,270 385,250" class="st2"/>
                
                <!-- Bird character -->
                <circle cx="130" cy="150" r="25" class="st2"/>
                <path d="M115,160 Q130,180 145,160" class="st3"/>
                <circle cx="120" cy="145" r="5" class="st4"/>
                <circle cx="120" cy="145" r="2" class="st5"/>
                <circle cx="140" cy="145" r="5" class="st4"/>
                <circle cx="140" cy="145" r="2" class="st5"/>
                <path d="M150,135 L170,120 L155,125" class="st2"/>
            </svg>
        </div>
        
        <div class="login-container">
            <div class="hole-punch">
                <div class="hole"></div>
                <div class="hole"></div>
            </div>
            
            <div class="login-header">
                <div class="login-logo">
                    <!-- Logo could go here -->
                </div>
                <h2>Login</h2>
            </div>
            
            <!-- Login Form -->
            <form action="/authenticate/login" method="post" id="loginForm">
                <div class="form-group position-relative">
                    <label for="email" class="form-label">
                        <i class="fa-solid fa-envelope"></i> Email Address
                    </label>
                    <input type="email" id="email" name="email" class="form-control" required placeholder="Enter your email" value="<%= locals.email || '' %>">
                </div>

                <div class="form-group position-relative">
                    <label for="password" class="form-label">
                        <i class="fa-solid fa-lock"></i> Password
                    </label>
                    <div class="password-field">
                        <input type="password" id="password" name="password" class="form-control" required placeholder="Enter your password">
                        <button type="button" class="password-toggle" id="togglePassword" aria-label="Toggle password visibility">
                            <i class="fa-solid fa-eye"></i>
                        </button>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary" id="loginBtn">
                    <i class="fa-solid fa-sign-in-alt me-2"></i> Login
                </button>
                
                <div class="text-center">
                    <a href="/authenticate/signup">
                        <i class="fa-solid fa-user-plus"></i> Don't have an account? Sign Up
                    </a>
                </div>
                
                <div class="text-center mt-3">
                    <a href="/user/forgotpassword">
                        <i class="fa-solid fa-key"></i> Forgot Password?
                    </a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');
            const loginForm = document.getElementById('loginForm');
            const loginBtn = document.getElementById('loginBtn');
            const errorToast = document.getElementById('errorToast');
            const errorMessage = document.getElementById('errorMessage');
            
            // Password visibility toggle
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                
                this.querySelector('i').classList.toggle('fa-eye');
                this.querySelector('i').classList.toggle('fa-eye-slash');
            });

            // Form submission handling
            loginForm.addEventListener('submit', function(e) {
                // Add loading state to button
                loginBtn.classList.add('loading');
                loginBtn.disabled = true;
                
                // Remove any existing error states
                document.querySelectorAll('.form-control').forEach(input => {
                    input.classList.remove('error');
                });
            });

            // Check for error message from server
            <% if (locals.errormsg && locals.errormsg.length > 0) { %>
                showErrorToast('<%= errormsg %>');
                
                // Add shake animation to form
                document.querySelector('.login-container').classList.add('shake-animation');
                setTimeout(() => {
                    document.querySelector('.login-container').classList.remove('shake-animation');
                }, 500);
                
                // Add error styling to inputs
                document.querySelectorAll('.form-control').forEach(input => {
                    input.classList.add('error');
                });
                
                // Remove loading state if it exists
                loginBtn.classList.remove('loading');
                loginBtn.disabled = false;
            <% } %>

            function showErrorToast(message) {
                errorMessage.textContent = message;
                const toast = new bootstrap.Toast(errorToast, {
                    autohide: true,
                    delay: 5000
                });
                toast.show();
                
                // Add sound effect (optional)
                if (window.AudioContext || window.webkitAudioContext) {
                    playErrorSound();
                }
            }

            function playErrorSound() {
                try {
                    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
                    const oscillator = audioContext.createOscillator();
                    const gainNode = audioContext.createGain();
                    
                    oscillator.connect(gainNode);
                    gainNode.connect(audioContext.destination);
                    
                    oscillator.frequency.setValueAtTime(400, audioContext.currentTime);
                    oscillator.frequency.setValueAtTime(200, audioContext.currentTime + 0.1);
                    
                    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.2);
                    
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.2);
                } catch (e) {
                    // Audio not supported, ignore
                }
            }

            // Auto-hide error styling when user starts typing
            document.querySelectorAll('.form-control').forEach(input => {
                input.addEventListener('input', function() {
                    this.classList.remove('error');
                });
            });
        });
    </script>
</body>
</html>