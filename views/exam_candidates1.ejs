<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - PrepZer0</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/exam_candidates.css">
</head>
<body>
    <div class="header">
        <div class="logo-section">
            <img src="./../uploads/unnamed-removebg-preview.png" alt="Logo">
            <h1>PrepZer0</h1>
        </div>
        <div class="subhead">
            <a href="/admin" class="report">
                <i class="fas fa-arrow-left"></i> Back to Exams
            </a>
            <a href="/admin/profile/students" class="profile">Profile</a>
            <button class="btn btn-sm" style="background:transparent; border:1px solid var(--border-color); color:var(--secondary-text);"
                onclick="location.href='/profile'">
                <i class="fas fa-user"></i> Admin
            </button>
        </div>
    </div>

    <div class="container">
        <!-- Exam Info -->
        <div class="exam-info">
            <h3>Exam Information</h3>
            <div class="exam-details">
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Name</div>
                    <div class="exam-detail-value"><%= exam.name %></div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Departments</div>
                    <div class="exam-detail-value">
                        <% exam.departments.forEach(dept => { %>
                            <span class="department-badge"><%= dept %></span>
                        <% }) %>
                    </div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Semester</div>
                    <div class="exam-detail-value"><%= exam.semester %></div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Schedule</div>
                    <div class="exam-detail-value">
                        <%= new Date(exam.scheduledAt).toLocaleDateString() %> 
                        <%= new Date(exam.scheduledAt).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %> - 
                        <%= new Date(exam.scheduleTill).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %>
                    </div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Duration</div>
                    <div class="exam-detail-value"><%= exam.duration %> minutes</div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Total Questions</div>
                    <div class="exam-detail-value"><%= exam.numMCQs + exam.numCoding %> (MCQ: <%= exam.numMCQs %>, Coding: <%= exam.numCoding %>)</div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Type</div>
                    <div class="exam-detail-value"><%= exam.questionType %></div>
                </div>
                <div class="exam-detail-item">
                    <div class="exam-detail-label">Actions</div>
                    <div class="exam-detail-value" style="display: flex; gap: 0.75rem; flex-wrap: wrap;">
                        <a href="/admin/exam/<%= exam._id %>/report" class="action-btn action-btn-success">
                            <i class="fas fa-file-excel"></i>
                            <span>Export Report</span>
                        </a>
                        <a href="/admin/exam/<%= exam._id %>/attendance" class="action-btn action-btn-warning">
                            <i class="fas fa-user-check"></i>
                            <span>Manage Attendance</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Evaluation Status for Coding Exams -->
        <% if (hasCoding) { %>
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="card-title">Evaluation Status</h2>
            </div>
            <div class="p-4">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="totalsubmission">Total Submissions: <%= evaluationResults.total %></h4>
                        <div class="mt-2">
                            <span class="badge badge-success">Evaluated: <span id="evaluated-count"><%= evaluationResults.evaluated %></span></span>
                            <span class="badge badge-warning">Pending: <span id="pending-count"><%= evaluationResults.pending %></span></span>
                        </div>
                        
                        <!-- Progress bar (hidden by default) -->
                        <div id="evaluation-progress" class="mt-3" style="display: none;">
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                     role="progressbar" 
                                     style="width: 0%" 
                                     id="progress-bar">
                                    <span id="progress-text">Starting evaluation...</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Results display -->
                        <div id="evaluation-results" class="mt-3" style="display: none;">
                            <div class="alert" id="results-alert"></div>
                        </div>
                    </div>
                    <div>
                        <button class="btn btn-primary" 
                                id="evaluate-btn" 
                                onclick="evaluateAllSubmissions('<%= exam._id %>')">
                            <i class="fas fa-sync" id="evaluate-icon"></i> 
                            <span id="evaluate-text">Evaluate All</span>
                        </button>
                        
                        <!-- Show refresh button after evaluation -->
                        <button class="btn btn-secondary ml-2" 
                                id="refresh-btn" 
                                onclick="location.reload()" 
                                style="display: none;">
                            <i class="fas fa-refresh"></i> Refresh Page
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <% } %>

        <!-- Candidates List -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Exam Candidates (<span id="total-count"><%= candidates.length %></span>)</h2>
            </div>
            
            <!-- Search and Filter Controls -->
            <div class="controls-section" style="padding: 1rem 1.5rem; border-bottom: 1px solid var(--border-color);">
                <input type="text" id="searchInput" class="search-input" placeholder="Search by USN, Roll No, or Department..." oninput="handleSearch()">
                <div class="filters">
                    <select id="departmentFilter" class="filter-select" onchange="handleFilter()">
                        <option value="">All Departments</option>
                        <% 
                        const departments = [...new Set(candidates.map(c => c.student.Department).filter(Boolean))];
                        departments.forEach(dept => { %>
                            <option value="<%= dept %>"><%= dept %></option>
                        <% }) %>
                    </select>
                    <select id="statusFilter" class="filter-select" onchange="handleFilter()">
                        <option value="">All Status</option>
                        <option value="submitted">Submitted</option>
                        <option value="active">Active</option>
                        <option value="inactive">Not Started</option>
                    </select>
                    <select id="pageSize" class="filter-select" onchange="handlePageSizeChange()">
                        <option value="25">25 per page</option>
                        <option value="50" selected>50 per page</option>
                        <option value="100">100 per page</option>
                    </select>
                </div>
            </div>
            
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Student USN</th>
                            <th>Roll No.</th>
                            <th>Department</th>
                            <th>Semester</th>
                            <th>Activity Status</th>
                            <% if (hasMCQ && hasCoding) { %>
                                <th>Total Score</th>
                            <% } else { %>
                                <th>Score</th>
                            <% } %>
                            <% if (hasMCQ && hasCoding) { %>
                                <th>MCQ Score</th>
                                <th>Coding Score</th>
                            <% } %>
                            <% if (hasCoding) { %>
                                <th>Evaluation</th>
                            <% } %>
                            <th>Submitted At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="candidatesTable">
                        <!-- Candidates will be loaded here via JavaScript -->
                    </tbody>
                </table>
                
                <!-- Loading state -->
                <div class="loading-row" id="loading-state">
                    <div class="loading-spinner"></div>
                    <p>Loading candidates...</p>
                </div>
                
                <!-- Empty states -->
                <div class="empty-state" id="no-candidates" style="display: none;">
                    <i class="fas fa-users"></i>
                    <h3>No Candidates Found</h3>
                    <p>No students have taken or started this exam yet</p>
                </div>
                
                <div class="empty-state" id="no-search-results" style="display: none;">
                    <i class="fas fa-search"></i>
                    <h3>No matching candidates</h3>
                    <p>No candidates match your search criteria</p>
                </div>
            </div>
            
            <!-- Pagination -->
            <div class="pagination-container">
                <div class="pagination-info">
                    Showing <span id="showing-start">0</span> to <span id="showing-end">0</span> of <span id="showing-total">0</span> candidates
                </div>
                <div class="pagination">
                    <button class="page-btn" id="prev-btn" onclick="changePage(-1)" disabled>
                        <i class="fas fa-chevron-left"></i> Previous
                    </button>
                    <span id="page-numbers"></span>
                    <button class="page-btn" id="next-btn" onclick="changePage(1)" disabled>
                        Next <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Pass data to JavaScript -->
    <script>
        // Pass server-side data to client-side JavaScript
        window.examData = {
            examId: '<%= exam._id %>',
            hasMCQ: <%= hasMCQ %>,
            hasCoding: <%= hasCoding %>
        };
    </script>
    
    <!-- Main JavaScript file -->
    <script src="/js/exam_candidate.js"></script>
    
    <!-- Evaluation JavaScript (only for coding exams) -->
    <% if (hasCoding) { %>
    <script>
        async function evaluateAllSubmissions(examId) {
            const btn = document.getElementById('evaluate-btn');
            const icon = document.getElementById('evaluate-icon');
            const text = document.getElementById('evaluate-text');
            const progress = document.getElementById('evaluation-progress');
            const progressBar = document.getElementById('progress-bar');
            const progressText = document.getElementById('progress-text');
            const results = document.getElementById('evaluation-results');
            const resultsAlert = document.getElementById('results-alert');
            const refreshBtn = document.getElementById('refresh-btn');
            
            // Disable button and show loading state
            btn.disabled = true;
            icon.className = 'fas fa-spinner fa-spin';
            text.textContent = 'Evaluating...';
            progress.style.display = 'block';
            results.style.display = 'none';
            
            // Animate progress bar
            let progressValue = 0;
            const progressInterval = setInterval(() => {
                progressValue += Math.random() * 10;
                if (progressValue > 90) progressValue = 90; // Don't go to 100% until done
                progressBar.style.width = progressValue + '%';
                progressText.textContent = `Evaluating submissions... ${Math.round(progressValue)}%`;
            }, 500);
            
            try {
                console.log('Starting evaluation for exam:', examId);
                
                const response = await fetch(`/admin/exam/${examId}/evaluate-all`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                // Clear progress interval
                clearInterval(progressInterval);
                progressBar.style.width = '100%';
                progressText.textContent = 'Evaluation complete!';
                
                if (data.success) {
                    // Show success message
                    resultsAlert.className = 'alert alert-success';
                    resultsAlert.innerHTML = `
                        <h5><i class="fas fa-check-circle"></i> Evaluation Completed Successfully!</h5>
                        <p>${data.message}</p>
                        <ul class="mb-0">
                            <li>Total Submissions: ${data.data.totalSubmissions}</li>
                            <li>Already Evaluated: ${data.data.alreadyEvaluated}</li>
                            <li>Newly Evaluated: ${data.data.newlyEvaluated}</li>
                            ${data.data.failed > 0 ? `<li class="text-danger">Failed: ${data.data.failed}</li>` : ''}
                            <li>Duration: ${data.data.duration} seconds</li>
                        </ul>
                    `;
                    
                    // Update counts
                    document.getElementById('evaluated-count').textContent = 
                        data.data.alreadyEvaluated + data.data.newlyEvaluated;
                    document.getElementById('pending-count').textContent = 
                        data.data.totalSubmissions - (data.data.alreadyEvaluated + data.data.newlyEvaluated);
                    
                } else {
                    // Show error message
                    resultsAlert.className = 'alert alert-danger';
                    resultsAlert.innerHTML = `
                        <h5><i class="fas fa-exclamation-triangle"></i> Evaluation Failed</h5>
                        <p>${data.message}</p>
                    `;
                }
                
                results.style.display = 'block';
                refreshBtn.style.display = 'inline-block';
                
            } catch (error) {
                console.error('Evaluation error:', error);
                
                // Clear progress interval
                clearInterval(progressInterval);
                
                // Show error
                resultsAlert.className = 'alert alert-danger';
                resultsAlert.innerHTML = `
                    <h5><i class="fas fa-exclamation-triangle"></i> Network Error</h5>
                    <p>Failed to start evaluation: ${error.message}</p>
                `;
                results.style.display = 'block';
                
            } finally {
                // Reset button state
                btn.disabled = false;
                icon.className = 'fas fa-sync';
                text.textContent = 'Evaluate All';
                
                // Hide progress after a delay
                setTimeout(() => {
                    progress.style.display = 'none';
                }, 2000);
            }
        }
    </script>
    <% } %>
</body>
</html>