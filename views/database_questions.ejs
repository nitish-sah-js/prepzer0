<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <title>Add Questions From Database</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #141D2F; /* Dark blue background */
        }
        h1, h2 {
            color: #0056b3; /* Darker blue for headings */
        }
        .container {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 123, 255, 0.1);
            border: 3px solid #1D4ED8;
            max-width: 1200px;
            margin: 30px auto;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            border-radius: 5px;
            overflow: hidden;
        }
        table, th, td {
            border: 1px solid #b3d1ff;
        }
        th, td {
            padding: 12px;
            text-align: left;
        }
        th {
            background: #1D4ED8;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f0f7ff;
        }
        .filters {
            background-color: #e6f0ff;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            border: 1px solid #b3d1ff;
        }
        .btn-primary {
            background-color: #1D4ED8;
            border-color: #1D4ED8;
        }
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }
        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #5a6268;
        }
        .section-header {
            background-color: #e6f0ff;
            padding: 10px 15px;
            border-radius: 5px;
            margin: 25px 0 15px 0;
            border-left: 5px solid #1D4ED8;
        }
        .selected-count {
            font-weight: bold;
            color: #1D4ED8;
            font-size: 18px;
        }
        .question-checkbox {
            width: 20px;
            height: 20px;
        }
        #randomSelectionForm {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
            border: 1px solid #dee2e6;
        }
        .classification-input {
            margin-bottom: 10px;
            padding: 10px;
            background-color: #fff;
            border-radius: 5px;
            border: 1px solid #ced4da;
        }
        .back-btn { 
            background: #6c757d; 
            display: inline-block; 
            padding: 8px 16px;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 20px;
        }
        .back-btn:hover {
            background: #5a6268;
            color: white;
        }
        .done-btn {
            background: #28a745;
            display: inline-block;
            padding: 10px 30px;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 20px;
            font-weight: bold;
            font-size: 16px;
        }
        .done-btn:hover {
            background: #218838;
            color: white;
        }
        .form-check {
            margin-bottom: 6px;
        }
        .difficulty-options {
            border-left: 3px solid #1D4ED8;
            padding-left: 10px;
            margin-top: 8px;
        }
    </style>
</head>
<body>

<div class="container">
    <h1 class="text-center mb-4">Add MCQ Questions From Database</h1>
    <p class="text-center">Exam: <strong><%= exam.name %></strong></p>
    <p class="text-center">MCQ Questions Required: <strong><%= exam.numMCQs - currentMCQCount %></strong></p>
    
    <div class="filters">
        <form id="filterForm" action="/admin/exam/<%= exam._id %>/database" method="GET">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="classification" class="form-label">Filter by Classification</label>
                    <select class="form-select" id="classification" name="classification">
                        <option value="">All Classifications</option>
                        <% classifications.forEach(classification => { %>
                            <option value="<%= classification %>" <%= selectedClassification === classification ? 'selected' : '' %>><%= classification %></option>
                        <% }) %>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="difficulty" class="form-label">Filter by Difficulty</label>
                    <select class="form-select" id="difficulty" name="difficulty">
                        <option value="">All Difficulties</option>
                        <option value="Easy" <%= selectedDifficulty === 'Easy' ? 'selected' : '' %>>Easy</option>
                        <option value="Medium" <%= selectedDifficulty === 'Medium' ? 'selected' : '' %>>Medium</option>
                        <option value="Hard" <%= selectedDifficulty === 'Hard' ? 'selected' : '' %>>Hard</option>
                    </select>
                </div>
                <div class="col-md-4 mb-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a href="/admin/exam/<%= exam._id %>/database" class="btn btn-secondary ms-2">Clear Filters</a>
                </div>
            </div>
        </form>
    </div>

    <div class="section-header">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Available MCQ Questions</h2>
            <div>
                <span class="selected-count" id="selectedCount">0</span> questions selected
            </div>
        </div>
    </div>

    <form id="manualSelectionForm" action="/admin/exam/<%= exam._id %>/database/add" method="POST">
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th width="5%">Select</th>
                        <th width="5%">#</th>
                        <th width="30%">Question</th>
                        <th width="30%">Options</th>
                        <th width="15%">Correct Answer</th>
                        <th width="15%">Classification</th>
                        <th width="10%">Difficulty</th>
                    </tr>
                </thead>
                <tbody>
                    <% questions.forEach((mcq, index) => { %>
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedQuestions[]" value="<%= mcq._id %>" class="question-checkbox" onchange="updateSelectedCount()">
                            </td>
                            <td><%= index + 1 %></td>
                            <td><%= mcq.question %></td>
                            <td><%= mcq.options.join(", ") %></td>
                            <td><strong><%= mcq.correctAnswer %></strong></td>
                            <td><%= mcq.classification %></td>
                            <td><%= mcq.level %></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
        
        <div class="text-center mt-4">
            <button type="submit" class="done-btn">Add Selected Questions</button>
        </div>
    </form>

    <div class="section-header mt-5">
        <h2 class="mb-0">Random Question Selection</h2>
    </div>

    <form id="randomSelectionForm" action="/admin/exam/<%= exam._id %>/database/random" method="POST">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="totalRandom" class="form-label">Total Random Questions</label>
                <input type="number" class="form-control" id="totalRandom" name="totalRandom" min="1" max="<%= exam.numMCQs - currentMCQCount %>">
                <small class="text-muted">This will select random questions from all available questions.</small>
            </div>
            <div class="col-md-6">
                <label class="form-label">Difficulty Level (Optional)</label>
                <div class="difficulty-options">
                    <div class="form-check">
                        <input class="form-check-input difficulty-radio" type="radio" name="randomDifficulty" id="easyRadio" value="easy">
                        <label class="form-check-label" for="easyRadio">Easy</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input difficulty-radio" type="radio" name="randomDifficulty" id="mediumRadio" value="medium">
                        <label class="form-check-label" for="mediumRadio">Medium</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input difficulty-radio" type="radio" name="randomDifficulty" id="hardRadio" value="hard">
                        <label class="form-check-label" for="hardRadio">Hard</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input difficulty-radio" type="radio" name="randomDifficulty" id="anyDifficulty" value="" checked>
                        <label class="form-check-label" for="anyDifficulty">Any Difficulty</label>
                    </div>
                </div>
            </div>
        </div>

        <h4 class="mt-4">Or select by classification:</h4>
        
        <div id="classificationContainer">
            <% classifications.forEach((classification, index) => { %>
                <div class="classification-input">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label"><%= classification %></label>
                            <input type="hidden" name="classifications[]" value="<%= classification %>">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Number of questions</label>
                            <input type="number" class="form-control classification-count" name="counts[]" min="0" value="0">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Difficulty Level (Optional)</label>
                            <select class="form-select classification-difficulty" name="classificationDifficulties[]">
                                <option value="">Any Difficulty</option>
                                <option value="easy">Easy</option>
                                <option value="medium">Medium</option>
                                <option value="hard">Hard</option>
                            </select>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
        
        <div class="text-center mt-4">
            <button type="submit" class="done-btn">Add Random Questions</button>
        </div>
    </form>

    <div class="text-center mt-4">
        <a href="/admin/exam/questions/<%= exam._id %>" class="back-btn">⬅ Back to Manage Questions</a>
    </div>
</div>

<script>
    function updateSelectedCount() {
        const checkboxes = document.querySelectorAll('.question-checkbox:checked');
        document.getElementById('selectedCount').textContent = checkboxes.length;
    }

    // Initialize difficulty dropdowns based on count values
    document.addEventListener('DOMContentLoaded', function() {
        // Disable difficulty options when no questions are selected for a classification
        const classificationCounts = document.querySelectorAll('.classification-count');
        classificationCounts.forEach(countInput => {
            const difficultySelect = countInput.closest('.row').querySelector('.classification-difficulty');
            
            // Set initial state
            if (parseInt(countInput.value) === 0) {
                difficultySelect.disabled = true;
            }
            
            // Add event listener for changes
            countInput.addEventListener('input', function() {
                if (parseInt(this.value) > 0) {
                    difficultySelect.disabled = false;
                } else {
                    difficultySelect.disabled = true;
                    difficultySelect.value = ""; // Reset to "Any Difficulty"
                }
            });
        });
        
        // Handle total random and classification selections being mutually exclusive
        const totalRandomInput = document.getElementById('totalRandom');
        const difficultyRadios = document.querySelectorAll('.difficulty-radio');
        
        totalRandomInput.addEventListener('input', function() {
            if (parseInt(this.value) > 0) {
                // Disable classification counts
                classificationCounts.forEach(input => {
                    input.value = 0;
                    const difficultySelect = input.closest('.row').querySelector('.classification-difficulty');
                    difficultySelect.disabled = true;
                    difficultySelect.value = "";
                });
            }
        });
        
        classificationCounts.forEach(input => {
            input.addEventListener('input', function() {
                if (parseInt(this.value) > 0) {
                    // Disable total random
                    totalRandomInput.value = "";
                    
                    // Reset difficulty radio buttons to "Any Difficulty"
                    document.getElementById('anyDifficulty').checked = true;
                }
            });
        });
    });

    // Validate that the random selection form doesn't exceed the required number of questions
    document.getElementById('randomSelectionForm').addEventListener('submit', function(e) {
        const totalRandomInput = document.getElementById('totalRandom');
        const classificationInputs = document.querySelectorAll('.classification-count');
        
        let totalRandomValue = totalRandomInput.value ? parseInt(totalRandomInput.value) : 0;
        let totalClassificationCount = 0;
        
        classificationInputs.forEach(input => {
            totalClassificationCount += input.value ? parseInt(input.value) : 0;
        });
        
        // Check if both methods are being used
        if (totalRandomValue > 0 && totalClassificationCount > 0) {
            alert('Please use either total random selection OR classification-based selection, not both.');
            e.preventDefault();
            return;
        }
        
        // Check if the total exceeds the required count
        const maxRequired = <%= exam.numMCQs - currentMCQCount %>;
        const totalToAdd = totalRandomValue > 0 ? totalRandomValue : totalClassificationCount;
        
        if (totalToAdd > maxRequired) {
            alert(`You can only add a maximum of ${maxRequired} questions.`);
            e.preventDefault();
        }
        
        if (totalToAdd === 0) {
            alert('Please specify the number of questions to add.');
            e.preventDefault();
        }
    });

    // Validate that manual selection doesn't exceed the required number of questions
    document.getElementById('manualSelectionForm').addEventListener('submit', function(e) {
        const checkboxes = document.querySelectorAll('.question-checkbox:checked');
        const maxRequired = <%= exam.numMCQs - currentMCQCount %>;
        
        if (checkboxes.length > maxRequired) {
            alert(`You can only add a maximum of ${maxRequired} questions.`);
            e.preventDefault();
        }
        
        if (checkboxes.length === 0) {
            alert('Please select at least one question.');
            e.preventDefault();
        }
    });
</script>

</body>
</html>










