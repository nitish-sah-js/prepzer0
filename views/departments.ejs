<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Departments - PrepZer0</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

        :root {
            --primary: #6366f1;
            --primary-hover: #4f46e5;
            --primary-light: rgba(99, 102, 241, 0.1);
            --dark-bg: #0f172a;
            --card-bg: #1e293b;
            --card-hover: #334155;
            --light-text: #f1f5f9;
            --secondary-text: #94a3b8;
            --border-color: #334155;
            --success: #10b981;
            --success-light: rgba(16, 185, 129, 0.15);
            --danger: #ef4444;
            --danger-light: rgba(239, 68, 68, 0.15);
            --warning: #f59e0b;
            --warning-light: rgba(245, 158, 11, 0.15);
            --info: #3b82f6;
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.3);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.4);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
            color: var(--light-text);
            min-height: 100vh;
            font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background:
                radial-gradient(circle at 20% 50%, rgba(99, 102, 241, 0.05) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.05) 0%, transparent 50%);
            pointer-events: none;
            z-index: 0;
        }

        /* Force light text colors */
        body, body * {
            color: var(--light-text);
        }

        /* Specific overrides for buttons */
        .btn-primary, .btn-primary * {
            color: white !important;
        }

        .btn-danger, .btn-danger * {
            color: white !important;
        }

        .btn-warning, .btn-warning * {
            color: white !important;
        }

        .btn-success, .btn-success * {
            color: white !important;
        }

        .header {
            background: rgba(30, 41, 59, 0.95);
            backdrop-filter: blur(10px);
            padding: 1.25rem 1.5rem;
            box-shadow: var(--shadow-md);
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 2.5rem;
            border-bottom: 1px solid rgba(99, 102, 241, 0.2);
            position: sticky;
            top: 0;
            z-index: 100;
            animation: slideDown 0.3s ease-out;
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .logo-section img {
            width: 42px;
            height: 42px;
            border-radius: 10px;
            box-shadow: var(--shadow-md);
            transition: transform 0.3s ease;
        }

        .logo-section img:hover {
            transform: scale(1.1) rotate(5deg);
        }

        .logo-section h1 {
            font-size: 1.75rem;
            font-weight: 700;
            margin: 0;
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #10b981 100%);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: -0.5px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 1.5rem 2rem;
            position: relative;
            z-index: 1;
        }

        .card {
            background: rgba(30, 41, 59, 0.8);
            backdrop-filter: blur(20px);
            border-radius: 1rem;
            box-shadow: var(--shadow-lg);
            margin-bottom: 2rem;
            border: 1px solid rgba(99, 102, 241, 0.1);
            overflow: hidden;
            animation: fadeInUp 0.5s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 700;
            margin: 0;
            color: var(--light-text) !important;
            background: linear-gradient(135deg, #f1f5f9 0%, #cbd5e1 100%);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .btn {
            border-radius: 0.5rem;
            font-weight: 600;
            padding: 0.625rem 1.25rem;
            border: none;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            position: relative;
            overflow: hidden;
            text-decoration: none;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn i {
            position: relative;
            z-index: 1;
        }

        .btn span {
            position: relative;
            z-index: 1;
        }

        .btn-primary {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            color: white;
            box-shadow: 0 4px 14px 0 rgba(99, 102, 241, 0.4);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px 0 rgba(99, 102, 241, 0.5);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
            box-shadow: 0 4px 14px 0 rgba(239, 68, 68, 0.3);
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px 0 rgba(239, 68, 68, 0.4);
        }

        .btn-warning {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
            box-shadow: 0 4px 14px 0 rgba(245, 158, 11, 0.3);
        }

        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px 0 rgba(245, 158, 11, 0.4);
        }

        .btn-success {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            box-shadow: 0 4px 14px 0 rgba(16, 185, 129, 0.3);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px 0 rgba(16, 185, 129, 0.4);
        }

        .btn-secondary {
            background: rgba(148, 163, 184, 0.1);
            color: var(--secondary-text);
            border: 1px solid var(--border-color);
        }

        .btn-secondary:hover {
            background: rgba(148, 163, 184, 0.2);
            color: var(--light-text);
            border-color: var(--secondary-text);
        }

        .btn-sm {
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
        }

        .table-container {
            padding: 1.5rem;
        }

        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        th {
            padding: 1rem;
            text-align: left;
            color: var(--secondary-text) !important;
            text-transform: uppercase;
            font-size: 0.75rem;
            font-weight: 700;
            letter-spacing: 0.05em;
            border-bottom: 1px solid var(--border-color);
            background: rgba(99, 102, 241, 0.03);
        }

        td {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            color: var(--light-text) !important;
            font-weight: 500;
        }

        td strong {
            color: var(--light-text) !important;
            font-weight: 700;
            font-size: 0.95rem;
        }

        tbody tr {
            transition: all 0.3s ease;
            position: relative;
        }

        tbody tr::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #6366f1, #8b5cf6);
            transition: width 0.3s ease;
        }

        tbody tr:hover {
            background-color: rgba(99, 102, 241, 0.05);
            transform: scale(1.01);
        }

        tbody tr:hover::after {
            width: 100%;
        }

        .badge {
            padding: 0.375rem 1rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.375rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: var(--shadow-sm);
        }

        .badge::before {
            content: '';
            width: 6px;
            height: 6px;
            border-radius: 50%;
            display: inline-block;
        }

        .badge-success {
            background: linear-gradient(135deg, var(--success-light), rgba(16, 185, 129, 0.05));
            color: var(--success);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

        .badge-success::before {
            background-color: var(--success);
            box-shadow: 0 0 8px var(--success);
            animation: pulse 2s infinite;
        }

        .badge-danger {
            background: linear-gradient(135deg, var(--danger-light), rgba(239, 68, 68, 0.05));
            color: var(--danger);
            border: 1px solid rgba(239, 68, 68, 0.3);
        }

        .badge-danger::before {
            background-color: var(--danger);
        }

        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(8px);
            animation: fadeIn 0.3s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        .modal-dialog {
            position: relative;
            width: 90%;
            max-width: 600px;
            margin: 3rem auto;
            animation: slideInDown 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        @keyframes slideInDown {
            from {
                opacity: 0;
                transform: translateY(-50px) scale(0.9);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .modal-content {
            background: linear-gradient(135deg, rgba(30, 41, 59, 0.95), rgba(51, 65, 85, 0.95));
            backdrop-filter: blur(20px);
            border-radius: 1rem;
            padding: 0;
            box-shadow: var(--shadow-xl);
            border: 1px solid rgba(99, 102, 241, 0.2);
        }

        .modal-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            color: var(--light-text) !important;
            font-weight: 700;
            margin: 0;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            padding: 1.5rem;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
        }

        .close {
            background: none;
            border: none;
            color: var(--secondary-text) !important;
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .close:hover {
            color: var(--light-text) !important;
            transform: rotate(90deg);
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--light-text) !important;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            background-color: #374151;
            color: #f7fafc !important;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
            background-color: #3f4a5c;
        }

        .form-control::placeholder {
            color: var(--secondary-text);
        }

        .alert {
            padding: 1rem 1.5rem;
            border-radius: 0.75rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            animation: slideInRight 0.4s ease-out;
            box-shadow: var(--shadow-md);
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .alert::before {
            content: '';
            width: 4px;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            border-radius: 0.75rem 0 0 0.75rem;
        }

        .alert-success {
            background: linear-gradient(135deg, var(--success-light), rgba(16, 185, 129, 0.05));
            border: 1px solid rgba(16, 185, 129, 0.3);
            color: var(--success);
            position: relative;
            padding-left: 2rem;
        }

        .alert-success::before {
            background: var(--success);
        }

        .alert-danger {
            background: linear-gradient(135deg, var(--danger-light), rgba(239, 68, 68, 0.05));
            border: 1px solid rgba(239, 68, 68, 0.3);
            color: var(--danger);
            position: relative;
            padding-left: 2rem;
        }

        .alert-danger::before {
            background: var(--danger);
        }

        .empty-state {
            text-align: center;
            padding: 5rem 2rem;
            color: var(--secondary-text);
        }

        .empty-state i {
            font-size: 5rem;
            margin-bottom: 1.5rem;
            opacity: 0.3;
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .empty-state h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--light-text);
        }

        .empty-state p {
            font-size: 1rem;
            color: var(--secondary-text);
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo-section">
            <img src="../uploads/unnamed-removebg-preview.png" alt="Logo">
            <h1>PrepZer0</h1>
        </div>
        <div>
            <a href="/admin" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    </div>

    <div class="container">
        <div id="alertContainer"></div>

        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Department Management</h2>
                <button class="btn btn-primary" onclick="openCreateModal()">
                    <i class="fas fa-plus"></i> Add Department
                </button>
            </div>

            <div class="table-container">
                <% if (departments && departments.length > 0) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Full Name</th>
                                <th>Status</th>
                                <th>Created</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% departments.forEach(dept => { %>
                                <tr>
                                    <td><strong><%= dept.code.toUpperCase() %></strong></td>
                                    <td><%= dept.name %></td>
                                    <td><%= dept.fullName || '-' %></td>
                                    <td>
                                        <span class="badge <%= dept.active ? 'badge-success' : 'badge-danger' %>">
                                            <%= dept.active ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td><%= new Date(dept.createdAt).toLocaleDateString() %></td>
                                    <td>
                                        <button class="btn btn-sm btn-warning" onclick='editDepartment(<%= JSON.stringify(dept) %>)'>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm <%= dept.active ? 'btn-secondary' : 'btn-success' %>"
                                                onclick="toggleStatus('<%= dept._id %>', <%= dept.active %>)">
                                            <i class="fas fa-<%= dept.active ? 'ban' : 'check' %>"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger" onclick="deleteDepartment('<%= dept._id %>', '<%= dept.name %>')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <div class="empty-state">
                        <i class="fas fa-building"></i>
                        <h3>No Departments Found</h3>
                        <p>Create your first department to get started</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Create/Edit Modal -->
    <div id="departmentModal" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 id="modalTitle">Add Department</h3>
                    <button class="close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="departmentForm">
                        <input type="hidden" id="deptId">

                        <div class="form-group">
                            <label class="form-label">Department Code *</label>
                            <input type="text" id="code" class="form-control" required
                                   placeholder="e.g., cs, ise, ece" maxlength="10">
                        </div>

                        <div class="form-group">
                            <label class="form-label">Department Name *</label>
                            <input type="text" id="name" class="form-control" required
                                   placeholder="e.g., Computer Science" maxlength="100">
                        </div>

                        <div class="form-group">
                            <label class="form-label">Full Name</label>
                            <input type="text" id="fullName" class="form-control"
                                   placeholder="e.g., Department of Computer Science & Engineering" maxlength="150">
                        </div>

                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea id="description" class="form-control" rows="3"
                                      placeholder="Optional description" maxlength="500"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    <button class="btn btn-primary" onclick="saveDepartment()">
                        <i class="fas fa-save"></i> Save
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function showAlert(message, type = 'success') {
            const alertContainer = document.getElementById('alertContainer');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.textContent = message;
            alertContainer.appendChild(alert);

            setTimeout(() => {
                alert.remove();
            }, 5000);
        }

        function openCreateModal() {
            document.getElementById('modalTitle').textContent = 'Add Department';
            document.getElementById('departmentForm').reset();
            document.getElementById('deptId').value = '';
            document.getElementById('departmentModal').style.display = 'block';
        }

        function editDepartment(dept) {
            document.getElementById('modalTitle').textContent = 'Edit Department';
            document.getElementById('deptId').value = dept._id;
            document.getElementById('code').value = dept.code;
            document.getElementById('name').value = dept.name;
            document.getElementById('fullName').value = dept.fullName || '';
            document.getElementById('description').value = dept.description || '';
            document.getElementById('departmentModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('departmentModal').style.display = 'none';
        }

        async function saveDepartment() {
            const deptId = document.getElementById('deptId').value;
            const data = {
                code: document.getElementById('code').value.trim(),
                name: document.getElementById('name').value.trim(),
                fullName: document.getElementById('fullName').value.trim(),
                description: document.getElementById('description').value.trim()
            };

            if (!data.code || !data.name) {
                showAlert('Code and Name are required', 'danger');
                return;
            }

            try {
                const url = deptId ? `/admin/departments/${deptId}` : '/admin/departments/create';
                const method = deptId ? 'PUT' : 'POST';

                const response = await fetch(url, {
                    method: method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (result.success) {
                    showAlert(result.message, 'success');
                    closeModal();
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    showAlert(result.message, 'danger');
                }
            } catch (error) {
                showAlert('An error occurred', 'danger');
            }
        }

        async function toggleStatus(id, currentStatus) {
            if (!confirm(`Are you sure you want to ${currentStatus ? 'deactivate' : 'activate'} this department?`)) {
                return;
            }

            try {
                const response = await fetch(`/admin/departments/${id}/toggle`, {
                    method: 'PATCH'
                });

                const result = await response.json();

                if (result.success) {
                    showAlert(result.message, 'success');
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    showAlert(result.message, 'danger');
                }
            } catch (error) {
                showAlert('An error occurred', 'danger');
            }
        }

        async function deleteDepartment(id, name) {
            if (!confirm(`Are you sure you want to delete "${name}"? This action cannot be undone.`)) {
                return;
            }

            try {
                const response = await fetch(`/admin/departments/${id}`, {
                    method: 'DELETE'
                });

                const result = await response.json();

                if (result.success) {
                    showAlert(result.message, 'success');
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    showAlert(result.message, 'danger');
                }
            } catch (error) {
                showAlert('An error occurred', 'danger');
            }
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('departmentModal');
            if (event.target === modal) {
                closeModal();
            }
        }
    </script>
</body>
</html>
