<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title %> - Student Exam History</title>
  <style>
    :root {
      --primary-bg: #1B2638;
      --secondary-bg: #1e263a;
      --card-bg: #2a3854;
      --accent-color: #4285f4;
      --hover-accent: #5a94ff;
      --text-primary: #ffffff;
      --text-secondary: #a0aec0;
      --border-color: #3d4b69;
      --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      --input-bg: #252e43;
      --success-color: #34d399;
      --danger-color: #f87171;
      --warning-color: #fbbf24;
    }
    
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    body {
      font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--primary-bg);
      color: var(--text-primary);
      line-height: 1.5;
      min-height: 100vh;
      background-image: linear-gradient(to bottom, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }

    .upper{
        display: flex;
        align-items: center;
        justify-content: space-between;
    }


    header {
      background-color: var(--secondary-bg);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      position: sticky;
      top: 0;
      z-index: 100;
      padding: 15px 0;
    }

    .page-title {
      text-align: center;
      margin-bottom: 20px;
      padding-top: 10px;
      font-size: 28px;
      font-weight: 600;
      color: var(--accent-color);
      letter-spacing: -0.5px;
    }

    .student-profile {
      background-color: var(--card-bg);
      border-radius: 16px;
      padding: 30px;
      margin: 30px 0;
      display: flex;
      align-items: center;
      gap: 24px;
      box-shadow: var(--card-shadow);
      border: 1px solid var(--border-color);
    }

    .profile-avatar {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      object-fit: cover;
      border: 3px solid var(--accent-color);
      box-shadow: 0 0 0 3px rgba(66, 133, 244, 0.2);
    }

    .profile-info {
      flex: 1;
    }

    .profile-name {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 4px;
    }

    .profile-usn {
      font-size: 16px;
      color: var(--text-secondary);
      margin-bottom: 12px;
    }

    .profile-details {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-top: 8px;
    }

    .profile-badge {
      background-color: rgba(66, 133, 244, 0.15);
      padding: 6px 14px;
      border-radius: 12px;
      font-size: 14px;
      font-weight: 500;
      color: var(--accent-color);
    }

    .back-button {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      background-color: rgba(66, 133, 244, 0.1);
      padding: 8px 16px;
      border-radius: 8px;
      color: var(--accent-color);
      text-decoration: none;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .back-button:hover {
      background-color: rgba(66, 133, 244, 0.2);
    }

    .exams-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 24px;
      margin-top: 30px;
    }

    .exam-card {
      background-color: var(--card-bg);
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--card-shadow);
      border: 1px solid var(--border-color);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .exam-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    .exam-title {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 8px;
      color: var(--text-primary);
    }

    .exam-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 16px;
      color: var(--text-secondary);
      font-size: 14px;
    }

    .exam-date {
      font-style: italic;
      margin-bottom: 5px;
    }

    .exam-stats {
      margin-top: 12px;
      padding-top: 12px;
      border-top: 1px solid var(--border-color);
    }

    .stat-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 8px;
      align-items: center;
    }

    .stat-label {
      color: var(--text-secondary);
    }

    .stat-value {
      font-weight: 500;
    }

    .no-exams {
      grid-column: 1 / -1;
      text-align: center;
      padding: 60px 25px;
      font-size: 18px;
      color: var(--text-secondary);
      background-color: var(--card-bg);
      border-radius: 12px;
      margin: 30px auto;
      max-width: 500px;
      box-shadow: var(--card-shadow);
    }

    .score-pill {
      padding: 4px 12px;
      border-radius: 12px;
      font-weight: 600;
      font-size: 14px;
      display: inline-block;
    }

    .score-high {
      background-color: rgba(52, 211, 153, 0.2);
      color: var(--success-color);
    }

    .score-medium {
      background-color: rgba(251, 191, 36, 0.2);
      color: var(--warning-color);
    }

    .score-low {
      background-color: rgba(248, 113, 113, 0.2);
      color: var(--danger-color);
    }

    .section-title {
      font-size: 22px;
      font-weight: 600;
      margin: 40px 0 20px;
      color: var(--text-primary);
      position: relative;
      padding-left: 15px;
    }

    .section-title:before {
      content: "";
      position: absolute;
      left: 0;
      top: 4px;
      bottom: 4px;
      width: 5px;
      background-color: var(--accent-color);
      border-radius: 10px;
    }

    .integrity-badge {
      padding: 4px 12px;
      border-radius: 12px;
      font-weight: 600;
      font-size: 14px;
      display: inline-block;
    }

    .integrity-acceptable {
      background-color: rgba(52, 211, 153, 0.2);
      color: var(--success-color);
    }

    .integrity-unacceptable {
      background-color: rgba(248, 113, 113, 0.2);
      color: var(--danger-color);
    }

    .report-link {
      display: inline-block;
      margin-top: 15px;
      padding: 6px 16px;
      background-color: var(--accent-color);
      color: white;
      text-decoration: none;
      font-weight: 500;
      border-radius: 6px;
      transition: background-color 0.2s ease;
    }

    .report-link:hover {
      background-color: var(--hover-accent);
    }

    .rank-badge {
      background-color: rgba(251, 191, 36, 0.2);
      padding: 4px 12px;
      border-radius: 12px;
      font-weight: 600;
      font-size: 14px;
      color: var(--warning-color);
    }

    @media (max-width: 768px) {
      .student-profile {
        flex-direction: column;
        text-align: center;
        padding: 20px;
      }

      .profile-details {
        justify-content: center;
      }

      .exams-container {
        grid-template-columns: 1fr;
      }
    }

    /* Edit Button */
    .edit-student-btn {
      background-color: var(--accent-color);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 600;
      font-size: 14px;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .edit-student-btn:hover {
      background-color: var(--hover-accent);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(66, 133, 244, 0.3);
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(4px);
    }

    .modal-content {
      background-color: var(--card-bg);
      margin: 3% auto;
      padding: 30px;
      border: 1px solid var(--border-color);
      border-radius: 12px;
      width: 90%;
      max-width: 600px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
    }

    .modal-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--accent-color);
    }

    .close {
      color: var(--text-secondary);
      font-size: 32px;
      font-weight: bold;
      cursor: pointer;
      transition: color 0.2s ease;
    }

    .close:hover {
      color: var(--text-primary);
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: var(--text-secondary);
      font-weight: 500;
      font-size: 14px;
    }

    .form-group input,
    .form-group select {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      background-color: var(--input-bg);
      color: var(--text-primary);
      font-size: 15px;
      transition: all 0.2s ease;
    }

    .form-group input:focus,
    .form-group select:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.2);
    }

    .form-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 30px;
    }

    .btn {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-weight: 600;
      font-size: 15px;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .btn-primary {
      background-color: var(--accent-color);
      color: white;
    }

    .btn-primary:hover {
      background-color: var(--hover-accent);
    }

    .btn-secondary {
      background-color: var(--border-color);
      color: var(--text-primary);
    }

    .btn-secondary:hover {
      background-color: #4a5873;
    }
  </style>
</head>
<body>
  <header>
    <div class="container upper">
      <h1 class="page-title">Student Exam History</h1>
      <a href="/admin/profile/students" class="back-button">← Back to All Students</a>
    </div>
  </header>

  <div class="container">
    <div class="student-profile">
      <img class="profile-avatar" src="<%= student.imageurl || 'https://randomuser.me/api/portraits/men/1.jpg' %>" alt="<%= student.fname %>" />
      <div class="profile-info">
        <h2 class="profile-name"><%= student.fname %> <%= student.lname || '' %></h2>
        <div class="profile-usn"><%= student.USN || student.email || 'No USN Available' %></div>
        <div class="profile-details">
          <% if(student.Department) { %>
            <span class="profile-badge"><%= student.Department %></span>
          <% } %>
          <% if(student.CurrentSemester || student.Semester) { %>
            <span class="profile-badge">Semester <%= student.CurrentSemester || student.Semester %></span>
          <% } %>
          <% if(student.Section) { %>
            <span class="profile-badge">Section <%= student.Section %></span>
          <% } %>
        </div>
      </div>
      <button class="edit-student-btn" onclick="openEditModal()">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
          <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
        </svg>
        Edit Student
      </button>
    </div>

    <h3 class="section-title">Exam History</h3>
    
    <div class="exams-container">
      <% if(examHistory && examHistory.length > 0) { %>
        <% examHistory.forEach(exam => { %>
          <div class="exam-card">
            <div class="exam-meta">
              <h4 class="exam-title"><%= exam.title %></h4>
              <span class="exam-date"><%= exam.date %></span>
            </div>
            
            <div class="exam-stats">
              <% if(exam.note) { %>
                <div class="stat-row">
                  <span class="stat-label">Note</span>
                  <span class="stat-value"><%= exam.note %></span>
                </div>
              <% } else { %>
                <div class="stat-row">
                  <span class="stat-label">Score</span>
                  <% 
                    let scoreClass = '';
                    const scoreValue = exam.scorePercentage || 0;
                    if (scoreValue >= 75) scoreClass = 'score-high';
                    else if (scoreValue >= 50) scoreClass = 'score-medium';
                    else scoreClass = 'score-low';
                  %>
                  <span class="stat-value score-pill <%= scoreClass %>">
                    <% if(exam.scoreObtained !== undefined && exam.scoreTotal !== undefined) { %>
                      <%= exam.scoreObtained %>/<%= exam.scoreTotal %> (<%= exam.scorePercentage %>%)
                    <% } else { %>
                      <%= exam.scorePercentage %>%
                    <% } %>
                  </span>
                </div>
                
                <% if(exam.questionsAttempted !== undefined && exam.totalQuestions !== undefined) { %>
                <div class="stat-row">
                  <span class="stat-label">Questions Attempted</span>
                  <span class="stat-value"><%= exam.questionsAttempted %> / <%= exam.totalQuestions %></span>
                </div>
                <% } %>
                
                <% if(exam.timeTaken) { %>
                <div class="stat-row">
                  <span class="stat-label">Time Taken</span>
                  <span class="stat-value"><%= exam.timeTaken %></span>
                </div>
                <% } %>
                
                <% if(exam.submittedAt) { %>
                <div class="stat-row">
                  <span class="stat-label">Submitted</span>
                  <span class="stat-value"><%= exam.submittedAt %></span>
                </div>
                <% } %>
                
                <% if(exam.rank && exam.totalStudents) { %>
                <div class="stat-row">
                  <span class="stat-label">Rank</span>
                  <span class="stat-value rank-badge">
                    <%= exam.rank %> of <%= exam.totalStudents %>
                  </span>
                </div>
                <% } %>
                
                <% if(exam.integrityStatus) { %>
                <div class="stat-row">
                  <span class="stat-label">Integrity</span>
                  <span class="stat-value integrity-badge <%= exam.integrityStatus === 'Acceptable' ? 'integrity-acceptable' : 'integrity-unacceptable' %>">
                    <%= exam.integrityStatus %>
                  </span>
                </div>
                <% } %>
                
                <div class="stat-row" style="justify-content: center; margin-top: 15px;">
                  <a href="/admin/exam/submission/<%= exam.id %>" class="report-link">View Full Report</a>
                </div>
              <% } %>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <div class="no-exams">
          <p>No exam history available for this student</p>
          <p>The student has not taken any exams yet</p>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Edit Student Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Edit Student</h2>
        <span class="close" onclick="closeEditModal()">&times;</span>
      </div>
      <form id="editStudentForm" onsubmit="saveStudent(event)">
        <div class="form-group">
          <label for="fname">First Name</label>
          <input type="text" id="fname" name="fname" value="<%= student.fname %>" required>
        </div>

        <div class="form-group">
          <label for="lname">Last Name</label>
          <input type="text" id="lname" name="lname" value="<%= student.lname || '' %>" required>
        </div>

        <div class="form-group">
          <label for="usn">USN</label>
          <input type="text" id="usn" name="USN" value="<%= student.USN %>" required>
        </div>

        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" value="<%= student.email %>" required>
        </div>

        <div class="form-group">
          <label for="department">Department</label>
          <select id="department" name="Department" required>
            <option value="cs" <%= student.Department === 'cs' ? 'selected' : '' %>>Computer Science</option>
            <option value="is" <%= student.Department === 'is' ? 'selected' : '' %>>Information Science</option>
            <option value="ec" <%= student.Department === 'ec' ? 'selected' : '' %>>Electronics & Communication</option>
            <option value="et" <%= student.Department === 'et' ? 'selected' : '' %>>Electronics & Telecommunication</option>
            <option value="ai" <%= student.Department === 'ai' ? 'selected' : '' %>>Artificial Intelligence</option>
            <option value="cv" <%= student.Department === 'cv' ? 'selected' : '' %>>Civil Engineering</option>
            <option value="ee" <%= student.Department === 'ee' ? 'selected' : '' %>>Electrical Engineering</option>
            <option value="ad" <%= student.Department === 'ad' ? 'selected' : '' %>>Automation & Robotics</option>
          </select>
        </div>

        <div class="form-group">
          <label for="semester">Semester</label>
          <select id="semester" name="Semester" required>
            <option value="1" <%= student.Semester == 1 ? 'selected' : '' %>>Semester 1</option>
            <option value="2" <%= student.Semester == 2 ? 'selected' : '' %>>Semester 2</option>
            <option value="3" <%= student.Semester == 3 ? 'selected' : '' %>>Semester 3</option>
            <option value="4" <%= student.Semester == 4 ? 'selected' : '' %>>Semester 4</option>
            <option value="5" <%= student.Semester == 5 ? 'selected' : '' %>>Semester 5</option>
            <option value="6" <%= student.Semester == 6 ? 'selected' : '' %>>Semester 6</option>
            <option value="7" <%= student.Semester == 7 ? 'selected' : '' %>>Semester 7</option>
            <option value="8" <%= student.Semester == 8 ? 'selected' : '' %>>Semester 8</option>
          </select>
        </div>

        <div class="form-group">
          <label for="phone">Phone (Optional)</label>
          <input type="tel" id="phone" name="phone" value="<%= student.phone || '' %>">
        </div>

        <div class="form-group">
          <label for="rollno">Roll Number (Optional)</label>
          <input type="text" id="rollno" name="Rollno" value="<%= student.Rollno || '' %>">
        </div>

        <div class="form-actions">
          <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const studentId = '<%= student._id %>';

    // Open edit modal
    function openEditModal() {
      document.getElementById('editModal').style.display = 'block';
    }

    // Close edit modal
    function closeEditModal() {
      document.getElementById('editModal').style.display = 'none';
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
      const modal = document.getElementById('editModal');
      if (event.target == modal) {
        closeEditModal();
      }
    }

    // Save student
    async function saveStudent(event) {
      event.preventDefault();

      const formData = new FormData(event.target);

      const data = {
        fname: formData.get('fname'),
        lname: formData.get('lname'),
        USN: formData.get('USN'),
        email: formData.get('email'),
        Department: formData.get('Department'),
        Semester: formData.get('Semester'),
        phone: formData.get('phone'),
        Rollno: formData.get('Rollno')
      };

      try {
        const response = await fetch(`/admin/students/${studentId}/edit`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
          alert('Student updated successfully!');
          location.reload();
        } else {
          alert('Error: ' + result.message);
        }
      } catch (error) {
        console.error('Error updating student:', error);
        alert('Network error occurred');
      }
    }
  </script>
</body>
</html>